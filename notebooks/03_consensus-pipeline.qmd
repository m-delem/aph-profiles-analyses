```{r}
#| label: setup
#| echo: true
#| code-fold: false

if (!requireNamespace("pacman")) install.packages("pacman")
pacman::p_load(
  conflicted, 
  fs, 
  here,
  ggplot2,
  patchwork,
  purrr,
  sessioninfo
)

# source all our functions
dir_ls(here("R"), type = "file", recurse = TRUE) |> walk(source)

# resolve package conflicts
conflicts_prefer(
  dplyr::filter(), 
  dplyr::select(),
  scales::rescale(), 
  purrr::map(),
  base::as.data.frame(),
  base::which.max(),
  .quiet = TRUE
  )
```

```{r}
#| label: load-data

df <- import_jatos_data()$data_final

partial_correlation_vars <- c(
  "visual_imagery", "sensory_imagery", "spatial_imagery", "verbal_strategies",
  "fluid_intelligence", "verbal_reasoning", "span_spatial")

dfs_to_cluster <- list(
  # Solution 1: simply scale then cluster the embedded raw variables
  scaled = 
    df |> 
    scale_vars() |> 
    select(vviq:span_digit, score_similarities),
  # Solution 2: manual reduction based on partial correlation first
  reduced = 
    df |> 
    reduce_vars() |> 
    select(any_of(partial_correlation_vars)) |> 
    mutate(across(everything(), ~as.numeric(scale(.))))
)
```

# Computing clustering consensus

```{r}
#| label: embed-and-cluster

cluster_results <- 
  map(
    dfs_to_cluster, 
    embed_and_cluster, 
    df = df
  )
```

```{r}
#| label: print-summary

walk(cluster_results, ~walk(.$summary, print))
```

# Number of clusters

```{r}
#| fig-width: 10
#| fig-height: 6

p1 <-
  cluster_results$scaled$clustering[[3]]$E |> 
  diceR::graph_cdf() + 
  theme_minimal() + 
  facet_grid(~Method) + 
  scale_colour_brewer() + 
  theme(panel.border = element_rect(colour = "grey50", fill = NA))

p2 <-
  cluster_results$scaled$clustering[[3]]$E |> 
  diceR::graph_delta_area() + 
  theme_minimal() + 
  facet_grid(~Method) + 
  scale_colour_brewer() + 
  theme(panel.border = element_rect(colour = "grey50", fill = NA))

p1 / p2
```


# Variable embeddings

```{r}
#| label: plot-embeddings
#| fig-width: 8
#| fig-height: 4

p_embeds <- plot_clusters_embeds(cluster_results, df)

print(p_embeds)

ggsave(
  filename = "figures/cluster-embeddings.pdf",
  plot = p_embeds,
  width = 180,
  height = 90,
  units = "mm"
)
```

# Cluster radars

```{r}
#| label: plot-radars
#| fig-width: 8
#| fig-height: 4
#| 

df_clustered <- 
  df |> 
  add_clusters(cluster_results$scaled,  "scaled") |>
  add_clusters(cluster_results$reduced, "reduced") |>
  mutate(across(contains("cluster"), ~ rename_clusters(., vviq))) |> 
  align_clusters() |>
  scale_vars() |> 
  get_long_format() |> 
  mutate(
    Variable = 
      Variable |> 
      str_replace("Reading\ncomprehension", "Reading") |> 
      str_replace("Psi-Q Sensations", "Psi-Q Sens.") |> 
      str_replace("Psi-Q Feelings", "Psi-Q Feel.") |>  
      str_replace("Audition", "Auditory") |> 
      factor() |> 
      fct_inorder() |> 
      fct_relevel("VVIQ", after = Inf)
  )

p1 <-
  plot_clusters_radar(
    df_clustered,
    value ~ Variable + Cluster,
    palette = c("#56B4E9", "#E69F00", "#009E73")
  ) +
  theme(plot.margin = margin(0, 3.5, 0, 2, "mm"))

p2 <-
  plot_clusters_radar(
    df_clustered,
    value ~ Variable + Subcluster,
    palette = c("#56B4E9", "#E69F00", "#F5C710", "#009E73")
  ) +
   theme(plot.margin = margin(0, 2, 0, 3.5, "mm"))

p_radars <- p1 + p2

print(p_radars)

ggsave(
  filename = "figures/cluster-radars.pdf",
  plot = p_radars,
  width = 180,
  height = 90,
  units = "mm"
)
```


