---
format: docx
---

Preliminary Set-up

The data for the analysis is retrieved from the file `data/anonymized-data-n112.xlsx`.

This analysis was conducted in R language on [RStudio](https://posit.co/download/rstudio-desktop/). This analysis report was written with [Quarto](https://quarto.org/).

The code generating all the computations, figures, tables, etc. can be found in the `data-analysis-report.qmd` Quarto file.

Data curation was done with R packages from the `tidyverse` collection. Visualisations were done with the packages `ggplot2`, `factoextra`, `ggradar`, `ggtext`, `latex2exp`, `see`, and `patchwork`. 

Bayesian analyses were conducted using the R packages `rstanarm`, `BayesFactor` and `bayestestR`, and unless otherwise stated default parameter values were used. The R packages `emmeans` and `modelbased` were used for marginal estimates and contrast analyses.

The `parameters` R package was used to compute clustering indices. The `mclust` R package was used for mixture clustering.


# Education, field, and occupation

```{r}
#| label: df0-cluster

df0_cluster <-
  bind_cols(df0, df3_cluster |> select(cluster)) |> 
  select(id, age, everything())
```

## Groups life

### Bayesian association tests

```{r}
#| label: groups-life

groups_life <- 
  df0_cluster |> 
  pivot_longer(
    c(education, field, occupation), 
    names_to = "variable", 
    values_to = "value"
    ) |> 
  select(group, variable, value) |> 
  group_by(variable) |> 
  nest() |> 
  rowwise() |> 
  mutate(
    table = list(
      data |> 
        group_by(group, value) |>
        count() |> 
        pivot_wider(
          names_from = group,
          values_from = n
        ) |>
        mutate(across(c(1,2), ~replace_na(.x, 0)))
    ),
    log_bf10 =
      contingencyTableBF(
        as.matrix(table[,c(2,3)]), 
        sampleType = "indepMulti", 
        fixedMargin = "cols"
      ) |> 
      as_tibble() |> 
      pull(bf) |> 
      log()
  ) |> 
  select(variable, log_bf10)

groups_life
```

### Visualisations

```{r}
#| label: groups-life-plot-function

plotting_groups_life <- function(
  # fill and color levels
  levels = c("Aphantasic", "Phantasic"),
  # scales labels and breaks
  labels = c(" Phantasic  ", " Aphantasic "),
  breaks = c("Phantasic", "Aphantasic"),
  # legend title
  fill_title = "Group:  ",
  # parameters for the vertical lines
  v_col = "grey50",
  v_lt  = 3,  # linetype
  v_ls  = .8, # line size
  width = 6400, height = 2000, res = 300,
  # label placement
  # education
  x_bf_edu = 2, 
  y_bf_edu = 27.5,
  # field
  x_bf_field = 8.5, 
  y_bf_field = 20,
  # occupation
  x_bf_occ = 8, 
  y_bf_occ = 30,
  # label text size
  txt_bf = 6.5,
  # transparency of the bars
  alpha = 0.5,
  # text sizes
  txt_axis = 20,
  txt_legend = 26,
  # grand plot margins
  t = 0, r = 150, b = 40, l = 0,
  # edu margins
  t_edu = 0, r_edu = 10, b_edu = 0, l_edu = 0,
  # relative widths of the plots
  width_p1 = .75, width_p2 = 1, width_p3 = 1
){
  
  # ─── Education plot ────────────────────────────────────────
  groups_education_plot <- 
    df0_cluster |>
    count(group, education) |>
    group_by(group) |>
    mutate(
      sum = sum(n),
      prop = (n / sum)*100
    ) |>
    ggplot() +
    geom_col(
      aes(
        x = education, 
        y = prop,
        fill  = factor(group, levels  = levels),
        color = factor(group, levels = levels)
        ),
      position = "dodge",
      alpha = alpha
    )+
    geom_vline(
      xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
    ) +
    geom_label(
      x = x_bf_edu, 
      y = y_bf_edu,
      label = TeX(r"($log(BF_{10}) = -4.88$)"),
      color = "black",
      size = txt_bf,
    ) +
    scale_fill_manual(values  = pal_duo, breaks = breaks, labels = labels) +
    scale_color_manual(values = pal_duo, breaks = breaks, guide = "none") +
    labs(
      x = "Education (ISCED levels)",
      y = "Proportion (%)",
      title = NULL,
      fill = fill_title
    ) +
    scale_y_continuous(
      breaks = seq(0, 100, 5),
      expand = c(0, 0)
      ) +
    coord_flip() +
    theme(
      panel.grid.major.x = element_line(),
      panel.grid.minor.x = element_line(),
      axis.title = element_text(size = txt_axis),
      axis.text  = element_text(size = txt_axis),
      plot.margin = margin(t_edu, r_edu, b_edu, l_edu)
    )
  
  # ─── Field plot ────────────────────────────────────────────
  groups_field_plot <- 
    df0_cluster |> 
    count(group, field_code) |> 
    group_by(group) |>
    mutate(
      sum = sum(n),
      prop = (n / sum)*100
    ) |> 
    ggplot() +
    geom_col(
      aes(
        x = field_code,
        y = prop,
        fill  = group,
        color = group
        ),
      position = "dodge",
      alpha = alpha
    ) +
    geom_vline(
      xintercept = c(
        1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5,
        8.5, 9.5, 10.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
    ) +
    geom_label(
      x = x_bf_field, 
      y = y_bf_field,
      label = TeX(r"($log(BF_{10}) = -5.41$)"),
      color = "black",
      size = txt_bf,
    ) +
    scale_fill_manual(values  = pal_duo, labels = labels) +
    scale_color_manual(values = pal_duo, guide = "none") +
    labs(
      x = "Study field (ISCED-F broad fields)",
      y = "Proportion (%)",
      title = NULL,
      fill = fill_title
    ) +
    scale_y_continuous(
      breaks = seq(0, 100, 5),
      expand = c(0, 0)
      ) +
    theme(
      panel.grid.major.y = element_line(),
      panel.grid.minor.y = element_line(),
      axis.title = element_text(size = txt_axis),
      axis.text  = element_text(size = txt_axis)
    )
  
  # ─── Occupation plot ──────────────────────────────────────────
  groups_occupation_plot <-
    df0_cluster |>
    count(group, occupation_code) |> 
    group_by(group) |>
    mutate(
      sum = sum(n),
      prop = (n / sum)*100
    ) |> 
    ggplot() +
    geom_col(
      aes(
        x = occupation_code, 
        y = prop,
        fill  = group,
        color = group
        ),
      position = "dodge",
      alpha = alpha
    ) +
    geom_vline(
      xintercept = c(
        1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5,
        8.5, 9.5, 10.5, 11.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
    ) +
    geom_label(
      x = x_bf_occ,
      y = y_bf_occ,
      label = TeX(r"($log(BF_{10}) = -4.37$)"),
      color = "black",
      size = txt_bf,
    ) +
    scale_fill_manual(values  = pal_duo, labels = labels) +
    scale_color_manual(values = pal_duo, guide = "none") +
    labs(
      x = "Occupation (ISCO-08 sub-major groups)",
      y = NULL,
      # y = "Proportion (%)",
      title = NULL,
      fill = fill_title
    ) +
    scale_y_continuous(
      breaks = seq(0, 100, 5),
      expand = c(0, 0)
      ) +
    theme(
      panel.grid.major.y = element_line(),
      panel.grid.minor.y = element_line(),
      axis.title = element_text(size = txt_axis),
      axis.text  = element_text(size = txt_axis)
    )
  
  # ─── Combined plot ───────────────────────────────────
  groups_life_plots <- (
    groups_education_plot + 
    groups_field_plot +
    groups_occupation_plot & 
      theme(
        legend.position = "top", 
        legend.title = element_text(size = txt_legend),
        legend.text  = element_text(size = txt_legend),
        legend.margin = margin(t, r, b, l)
        )
    ) +
    plot_layout(
      guides = "collect",
      widths = c(width_p1, width_p2, width_p3)
      )
  
  # ─── Export ───────────────────────────────────
  ggsave(
    groups_life_plots,
    filename = paste0(
      "plots/groups-life-plots-",
      environment() |> 
        as.list() |> 
        tail(26) |> 
        paste0(collapse = ""),
      ".png"
      ),
    width  = width,
    height = height,
    units  = "px"
  )
}
```

```{r}
#| label: fig-groups-life
#| eval: false

plotting_groups_life(
  width = 5200, height = 1800,
  txt_axis = 19,
  txt_bf = 6,
  y_bf_edu = 25,
  fill_title = NULL,
  x_bf_occ = 7)
```

## Clusters life

### Bayesian association tests

```{r}
#| label: clusters-life

clusters_life <- 
  df0_cluster |> 
  pivot_longer(
    c(education, field, occupation), 
    names_to = "variable", 
    values_to = "value"
    ) |> 
  select(cluster, variable, value) |> 
  group_by(variable) |> 
  nest() |> 
  rowwise() |> 
  mutate(
    table = list(
      data |> 
        group_by(cluster, value) |>
        count() |> 
        pivot_wider(
          names_from = cluster,
          values_from = n
        ) |>
        mutate(across(c(1,2,3), ~replace_na(.x, 0)))
    ),
    log_bf10 =
      contingencyTableBF(
        as.matrix(table[,c(2,3,4)]), 
        sampleType = "jointMulti"
      ) |> 
      as_tibble() |> 
      pull(bf) |> 
      log()
  ) |> 
  select(variable, log_bf10)

clusters_life

df0_cluster |> 
  group_by(cluster) |>
  filter(group == "Aphantasic") |>
  count(field) |> 
  pivot_wider(names_from = cluster, values_from = n) |> 
  mutate(across(c(B, C), ~replace_na(.x, 0))) |> 
  mutate(total = B + C)
```

### Visualisations

```{r}
#| label: clusters-life-plot-function

plotting_clusters_life <- function(
  # fill and color levels
  levels = c("C", "B", "A"),
  # scales labels and breaks
  labels = c(" A   ", " B   ", " C   "),
  breaks = c("A", "B", "C"),
  # legend title
  fill_title = "Cluster:   ",
  # accent for evidence
  accent = "red",
  # parameters for the vertical lines
  v_col = "grey50",
  v_lt  = 3,  # linetype
  v_ls  = .8, # line size
  width = 6400, height = 2000, res = 300,
  # label placement
  # education
  x_bf_edu = 2, 
  y_bf_edu = 26,
  # field
  x_bf_field = 8.5, 
  y_bf_field = 20,
  # occupation
  x_bf_occ = 9, 
  y_bf_occ = 35,
  # label text size
  txt_bf = 6.5,
  # transparency of the bars
  alpha = 0.5,
  # text sizes
  txt_axis = 20,
  txt_legend = 26,
  # grand plot margins
  t = 0, r = 150, b = 25, l = 0,
  # edu margins
  t_edu = 10, r_edu = 40, b_edu = 10, l_edu = 10,
  # relative widths of the plots
  width_p1 = .75, width_p2 = 1, width_p3 = 1
    
){
  
  # ─── Education plot ───────────────────────────────────
  clusters_education_plot <- 
  df0_cluster |>
  count(cluster, education) |>
  group_by(cluster) |>
  mutate(
    sum = sum(n),
    prop = (n / sum)*100
  ) |>
  ggplot() +
  geom_col(
    aes(
      x = education, 
      y = prop,
      fill  =  factor(cluster, levels = levels),
      color = factor(cluster, levels = levels)
      ),
    position = "dodge",
    alpha = alpha
  )+
  geom_vline(
    xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
  ) +
  geom_label(
    x = x_bf_edu, 
    y = y_bf_edu,
    label = TeX(r"($log(BF_{10}) = -6.90$)"),
    color = "black",
    size = txt_bf,
  ) +
  scale_fill_manual(values  = pal_trio, breaks = breaks, labels = labels) +
  scale_color_manual(values = pal_trio, breaks = breaks, guide = "none") +
  labs(
    # x = "Education (ISCED levels)",
    x = NULL,
    y = "Proportion (%)",
    title = NULL,
    fill = fill_title
  ) +
  scale_y_continuous(
    breaks = seq(0, 100, 5),
    expand = c(0, 0)
    ) +
  coord_flip() +
  theme(
    panel.grid.major.x = element_line(),
    panel.grid.minor.x = element_line(),
    axis.title = element_text(size = txt_axis),
    axis.text  = element_text(size = txt_axis),
    plot.margin = margin(t_edu, r_edu, b_edu, l_edu)
  )

  # ─── Field plot ───────────────────────────────────
  clusters_field_plot <- 
    df0_cluster |> 
    count(cluster, field_code) |> 
    group_by(cluster) |>
    mutate(
      sum = sum(n),
      prop = (n / sum)*100
    ) |> 
    ggplot() +
    geom_col(
      aes(
        x = field_code,
        y = prop,
        fill  = cluster,
        color = cluster
        ),
      position = "dodge",
      alpha = alpha
    ) +
    geom_vline(
      xintercept = c(
        1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5,
        8.5, 9.5, 10.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
    ) +
    geom_label(
      x = x_bf_field,
      y = y_bf_field,
      label = TeX(r"($log(BF_{10}) = -2.82$)"),
      color = "black",
      size = txt_bf,
    ) +
    scale_fill_manual(values  = pal_trio, labels = labels) +
    scale_color_manual(values = pal_trio, guide = "none") +
    labs(
      x = "Study field (ISCED-F broad fields)",
      y = "Proportion (%)",
      title = NULL,
      fill = fill_title
    ) +
    scale_y_continuous(
      breaks = seq(0, 100, 5),
      expand = c(0, 0)
      ) +
    theme(
      panel.grid.major.y = element_line(),
      panel.grid.minor.y = element_line(),
      axis.title = element_text(size = txt_axis),
      axis.text  = element_text(size = txt_axis)
    )
  
  # ─── Occupation plot ───────────────────────────────────
  clusters_occupation_plot <-
    df0_cluster |>
    count(cluster, occupation_code) |> 
    group_by(cluster) |>
    mutate(
      sum = sum(n),
      prop = (n / sum)*100
    ) |> 
    ggplot() +
    geom_col(
      aes(
        x = occupation_code, 
        y = prop,
        fill  = cluster,
        color = cluster
        ),
      position = "dodge",
      alpha = alpha
    ) +
    geom_vline(
      xintercept = c(
        1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5,
        8.5, 9.5, 10.5, 11.5),
      color    = v_col,
      linetype = v_lt,
      size     = v_ls
    ) +
    geom_label(
      x = x_bf_occ, 
      y = y_bf_occ,
      label = TeX(r"($log(BF_{10}) = 0.83$)"),
      color = accent,
      size = txt_bf,
    ) +
    scale_fill_manual(values  = pal_trio, labels = labels) +
    scale_color_manual(values = pal_trio, guide = "none") +
    labs(
      x = "Occupation (ISCO-08 sub-major groups)",
      y = NULL,
      # y = "Proportion (%)",
      title = NULL,
      fill = fill_title
    ) +
    scale_y_continuous(
      breaks = seq(0, 100, 5),
      expand = c(0, 0)
      ) +
    theme(
      panel.grid.major.y = element_line(),
      panel.grid.minor.y = element_line(),
      axis.title = element_text(size = txt_axis),
      axis.text  = element_text(size = txt_axis)
    )

  # ─── Combined plot ───────────────────────────────────
  clusters_life_plots <- (
    clusters_education_plot + 
    clusters_field_plot +
    clusters_occupation_plot & 
      theme(
        legend.position = "top", 
        legend.title = element_text(size = txt_legend),
        legend.text  = element_text(size = txt_legend),
        legend.margin = margin(t, r, b, l)
        )
    ) +
    plot_layout(
      guides = "collect",
      widths = c(width_p1, width_p2, width_p3)
      )

  # ─── Export ───────────────────────────────────
  ggsave(
    clusters_life_plots,
    filename = paste0(
      "plots/clusters-life-plots-",
      environment() |> 
        as.list() |> 
        tail(24) |> 
        paste0(collapse = ""),
      ".png"
      ),
    width  = width,
    height = height,
    units  = "px"
  )
}

```

```{r}
#| label: fig-clusters-life
#| eval: false

plotting_clusters_life(
  width = 5200, height = 1800,
  txt_axis = 19,
  txt_bf = 6,
  y_bf_edu = 24,
  x_bf_occ = 7
)
```






